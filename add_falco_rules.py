# list_signature = [['sched_setaffinity', 'sched_setaffinity'], ['pipe2', 'write'], ['sched_getaffinity', 'sched_setaffinity', 'sched_setaffinity'], ['eventfd2', 'rt_sigprocmask', 'read'], ['write', 'rt_sigprocmask', 'rt_sigaction'], ['sched_getaffinity', 'sched_getaffinity', 'sched_setaffinity', 'sched_setaffinity'], ['pipe2', 'eventfd2', 'rt_sigprocmask', 'read'], ['rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['close', 'sched_getaffinity', 'sched_getaffinity', 'sched_setaffinity', 'sched_setaffinity'], ['read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['write', 'rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['write', 'rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigprocmask', 'read', 'rt_sigaction', 'write', 'rt_sigprocmask', 'rt_sigaction'], ['openat', 'openat', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat'], ['openat', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read'], ['openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close'], ['read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat'], ['close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read'], ['close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'openat'], ['openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'openat', 'openat'], ['read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'openat', 'openat', 'openat'], ['close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'openat', 'openat', 'openat', 'openat'], ['openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat'], ['read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat'], ['close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'read'], ['openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'read', 'close'], ['read', 'close', 'openat', 'read', 'close', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'read', 'close', 'openat'], ['close', 'openat', 'read', 'close', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'read', 'close', 'openat', 'read'], ['openat', 'read', 'close', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'read', 'close', 'openat', 'read', 'close'], ['read', 'close', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat'], ['close', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read'], ['openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close'], ['openat', 'openat', 'openat', 'openat', 'openat', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat'], ['openat', 'openat', 'openat', 'openat', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read'], ['openat', 'openat', 'openat', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close', 'openat', 'read', 'close']]
# test_list = ['sched_setaffinity', 'sched_setaffinity']
falco_list_YES = ["syscall","open", "socket" ,"bind","connect", "listen", "sendto", "recvfrom", "socketpair", "setsockopt",
              "sendmsg" ,"recvmsg", "creat", "pipe","chdir", "fchdir","mkdir", "rmdir","dup","signalfd","kill","tkill","tgkill","inotify_init",
              "prlimit","ptrace","ioctl","rename","renameat","symlink","symlinkat","procexit","quotactl","setresuid","setresgid","setuid"
              ,"setgid","clone","fork","vfork","execve","setns","flock","accept","mount","umount","chroot","tracer","container"
              ,"setsid","mkdir","rmdir","unshare","execve","setpgid","bpf","seccomp","unlink","unlinkat","mkdirat","openat"
              ,"link","linkat","fchmodat","chmod","fchmod","renameat2","userfaultfd","pluginevent","container","openat2",
              "execveat","copy_file_range","clone3","open_by_handle_at","capset","useradded","groupadded","dup2","dup3","dup"]
falco_list_NO = [
    "close", "read", "write","send","recv","shutdown","getsockname","getpeername","getsockopt","sendmmsg","recvmmsg","eventfd",
    "futex","stat","lstat","fstat","stat64","lstat64","fstat64","epoll_wait","poll","select","lseek","llseek","getcwd","pread",
    "pwrite","readv","writev","preadv","pwritev","nanosleep","timerfd_create","getrlimit","setrlimit","fcntl","switch","brk","mmap",
    "mmap2","munmap","splice","sendfile","getuid","geteuid","getgid","getegid","getresuid","getresgid","signaldeliver","getdents","getdents64",
    "cpu_hotplug","semop","semctl","ppoll","semget","access","notification","page_fault","mprotect","io_uring_setup","io_uring_enter",
    "io_uring_register","mlock","munlock","mlockall","munlockall"
]


falco_list = list(set(falco_list_NO + falco_list_YES))

# for i in falco_list:
#     text ="- rule: "+i+"\n"+"  desc: "+i+"\n"+"  condition: container.id in (target_container) and evt.type = "+i+"\n"+"  output: "+ "\""+"Systemcall: "+i+"(user=%user.name %container.info parent=%proc.pname cmdline=%proc.cmdline)"+"\""+"\n"+"  priority: ERROR" + "\n" +"  tags: [users, container]" + "\n"
#     print(text)
#
for i in falco_list_YES:
    text ="- rule: "+i+"\n"+"  desc: "+i+"\n"+"  condition: container.id in (target_container) and evt.type = "+i+"\n"+"  output: "+ "\""+"Systemcall: "+i+"(user=%user.name %container.info parent=%proc.pname cmdline=%proc.cmdline)"+"\""+"\n"+"  priority: ERROR" + "\n" +"  tags: [users, container]" + "\n"
    print(text)